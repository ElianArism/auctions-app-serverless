# Metatada of the servicec
service: sls-integrador-elian-${self:provider.stage}

plugins:
  - serverless-offline
  - serverless-esbuild
  - serverless-prune-plugin
# information about the cloud provider and needed technologies
provider:
  name: aws
  runtime: nodejs20.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name}
  # To grant access to any created resource, you need specify the roles/permissions
  iamRoleStatements:
    - ${file(resources/dynamo/auctions-table/iam-roles.yml):AuctionsTableIAM}

# place to define props which aren't part of the sls framework core (plugins config for example)
custom:
  bundle:
    linting: false
  AuctionsTable:
    name: !Ref AuctionsTable # return dynamodb name when created

# lambda functions of the stack
functions:
  createAuction:
    handler: src/handlers/create-auction.handler
    events:
      - http:
          method: POST
          path: /create-auction

  getAuctions:
    handler: src/handlers/get-auctions.handler
    events:
      - http:
          method: GET
          path: /auctions

  getAuctionById:
    handler: src/handlers/get-auction-by-id.handler
    events:
      - http:
          method: GET
          path: /auction/{id}

  placeBid:
    handler: src/handlers/place-bid.handler
    events:
      - http:
          method: PATCH
          path: /auction/{id}/bid

  processAuction:
    handler: src/handlers/process-auction.handler
    # REVIEW Commented 4 now
    # events:
    #   - schedule:
    #       name: process_auction
    #       rate: rate(1 minute)
# resources needed
resources:
  Resources:
    # Cloudformation Syntax
    AuctionsTable: ${file(resources/dynamo/auctions-table/definition.yml):AuctionsTable}
